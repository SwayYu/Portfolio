import numpy as np

#創建2個假樣本
sample_before = np.array([1] * 28 + [0] * 72)
sample_after = np.array([1] * 48 + [0] * 48)

def permutation_sample(data1, data2):
    ttl_sample = np.concatenate((data1, data2))
    perm_sample = np.random.permutation(ttl_sample)
    perm_sample_1 = perm_sample[:len(data1)]
    perm_sample_2 = perm_sample[len(data1):]
    return perm_sample_1, perm_sample_2

def get_permutation_replicates(data1, data2, func, size=1):
    replicates = np.empty(size)
    for i in range(size):
        perm_sample_1, perm_sample_2 = permutation_sample(data1, data2)
        replicates[i] = func(perm_sample_1, perm_sample_2)
    return replicates

def diff_means(data1, data2):
    diff_means = np.mean(data2) - np.mean(data1)
    return diff_means
    
perm_replicates = get_permutation_replicates(sample_before, sample_after, diff_means, 10000)
diff_means_observation = diff_means(sample_before, sample_after)

p-value = np.sum(perm_replicates >= diff_means_observation) / len(perm_replicates)
print(p-value)
